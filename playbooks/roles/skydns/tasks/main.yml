---
- debug: var=skydns_domain

- set_fact:
    skydns_root: "{{ golang.path }}/src/{{ skydns.url }}"
- set_fact:
    skydns_bin:  "{{ skydns_root }}/skydns"

- name:        Downloading SkyDNS
  command:     go get '{{ skydns.url }}'
  environment: "{{ golang_env | expand_path( ansible_env ) }}"

- name: Switching SkyDNS tag
  command: git checkout '{{ skydns.version }}'
  args:
    chdir: "{{ skydns_root }}"

- name: Building SkyDNS
  command: go build -v
  args:
    chdir: "{{ skydns_root }}"
  environment: "{{ golang_env | expand_path( ansible_env ) }}"

- include: "{{ common.utils.service }}"
  vars:
    service: skydns
    title:   SkyDNS
    env:
      # https://github.com/skynetservices/skydns
      SKYDNS_DOMAIN:      "{{ skydns_domain }}"
      SKYDNS_ADDR:        "{{ common.net.any_ip }}:{{ common.net.dns_port }}"
      ETCD_MACHINES:      "{{ common.net.localhost }}:{{ etcd_port }}"
      SKYDNS_NAMESERVERS: "{{ common.net.public_dns }}"
    command: "{{ skydns_bin }} $SKYDNS_OPTS"
    port:    "{{ common.net.dns_port }}"

- name:     Running local dig
  command:  dig @{{ common.net.localhost }}
  register: dig_out

- name: Verifying local dig
  assert:
    that:
      - "'Got answer'       in dig_out.stdout"
      - "'QUESTION SECTION' in dig_out.stdout"
      - "'SERVER: {{ common.net.localhost }}#{{ common.net.dns_port }}({{ common.net.localhost }})' in dig_out.stdout"
