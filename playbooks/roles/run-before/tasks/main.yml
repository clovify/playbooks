---

- name: Checking for existence of a periodic 'touch' file
  stat: path={{ periodic_touch_file }}
  register: touch

- name: Calculating seconds since last periodic run
  set_fact:
    seconds_since_last_periodic: "{{ ansible_date_time.epoch|int - touch.stat.ctime|default(0)|int }}"

- name:     Checking if period is 'monthly'
  set_fact: period_sec={{ 30 * 24 * 3600 }}
  when:     period == 'monthly'

- name:     Checking if period is 'weekly'
  set_fact: period_sec={{ 7 * 24 * 3600 }}
  when:     period == 'weekly'

- name:     Checking if period is 'daily'
  set_fact: period_sec={{ 24 * 3600 }}
  when:     period == 'daily'

- name:     Checking if period is 'hourly'
  set_fact: period_sec={{ 3600 }}
  when:     period == 'hourly'

- name:     Checking if period_sec is undefined
  set_fact: period_sec={{ period|int }}
  when:     period_sec is undefined

- debug: var=period
- debug: var=period_sec
- debug: var=seconds_since_last_periodic

- name: Calculating if this should be a periodic run
  set_fact:
    periodic: "{{ ( not touch.stat.exists ) or ( seconds_since_last_periodic|int >= period_sec|int ) }}"

- debug: var=periodic

- debug: msg="Successful periodic run was never performed on this instance"
  when:  not touch.stat.exists

- debug: msg="Last successful periodic run was on {{ touch.stat.ctime | strftime }}, {{ seconds_since_last_periodic | explain }} ago"
  when: touch.stat.exists

- debug: msg="Periodic run - now!"
  when:  periodic

- debug: msg="Next periodic run will be on {{ ( touch.stat.ctime|int + period_sec|int ) | strftime }}, in {{ ( period_sec|int - seconds_since_last_periodic|int ) | explain }}"
  when: ( touch.stat.exists and ( not periodic|bool ))

# http://stackoverflow.com/questions/20010199/determining-if-a-process-runs-inside-lxc-docker
- name:     Checking if we're running inside Docker container
  shell:    grep docker /proc/1/cgroup | wc -l
  register: grep_result

- set_fact:
    is_docker:     "{{ grep_result.stdout|int > 0 }}"
    start_service: "{{ not ( ami | default( False ) | bool ) }}"

- debug: var=is_docker
- debug: var=start_service
