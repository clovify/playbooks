---
# ===================================================================================================
# Verifies endpoint is available and responds appropriately
# ===================================================================================================
# - Verifies endpoint is reachable at {{ host }}:{{ port }} within {{ timeout }} seconds
# - Waits for HTTP endpoint to respond with {{ wait }}
# - Verifies HTTP endpoint content with {{ verify }}
# ===================================================================================================
# - Required variables are: title, port. Others are optional.
# ===================================================================================================

- set_fact:
    v_host: "{{ host | default( common.net.localhost ) }}"
    v_port: "{{ port }}"

- debug: msg="Verifying {{ title }} endpoint {{ v_host }}:{{ v_port }}"

- name: Waiting for {{ title }} endpoint
  wait_for: host={{ v_host }} port={{ v_port }} timeout={{ timeout | default( 5 ) }}

- name: Waiting for {{ title }} HTTP endpoint
  uri:
    url:            "http://{{ v_host }}:{{ v_port }}{{ item.path | default('')}}"
    status_code:    "{{ item.status | default( 200 )}}"
    return_content: yes
  register: http_wait_out
  until:    item.content in http_wait_out.content
  # https://github.com/ansible/ansible/issues/5865
  retries: 20 # "{{ timeout | default( 5 ) | int // 3 }}"
  delay:   3
  with_items:
    - "{{ wait }}"
  when: wait is defined

- name: Verifying {{ title }} HTTP endpoint
  uri:
    url:            "http://{{ v_host }}:{{ v_port }}{{ item.path | default('')}}"
    return_content: yes
  register: http_verify_out
  with_items:
    - "{{ verify }}"
  # https://github.com/ansible/ansible/issues/10017
  failed_when: ( '{{ item.content | default('') }}' not in http_verify_out.content ) or ( {{ item.status | default( 200 ) }} != http_verify_out.status )
  when: verify is defined
